// Generated by CoffeeScript 1.10.0
(function() {
  describe('Leaf grammar', function() {
    var grammar;
    grammar = null;
    beforeEach(function() {
      waitsForPromise(function() {
        return atom.packages.activatePackage('language-leaf');
      });
      return runs(function() {
        return grammar = atom.grammars.grammarForScopeName('text.html.leaf');
      });
    });
    it('parses the grammar', function() {
      expect(grammar).toBeTruthy();
      return expect(grammar.scopeName).toBe('text.html.leaf');
    });
    it('parses variables', function() {
      var tokens;
      tokens = grammar.tokenizeLine("#(aRandomVariableName)").tokens;
      expect(tokens[0]).toEqual({
        value: '#',
        scopes: ['text.html.leaf', 'meta.variable.leaf', 'operator.control.leaf']
      });
      expect(tokens[1]).toEqual({
        value: '(',
        scopes: ['text.html.leaf', 'meta.variable.leaf', 'begin.operator.control.leaf']
      });
      expect(tokens[2]).toEqual({
        value: 'aRandomVariableName',
        scopes: ['text.html.leaf', 'meta.variable.leaf', 'entity.name.variable.leaf']
      });
      return expect(tokens[3]).toEqual({
        value: ')',
        scopes: ['text.html.leaf', 'meta.variable.leaf', 'end.operator.control.leaf']
      });
    });
    return it('parses tags', function() {
      var tokens;
      tokens = grammar.tokenizeLine("##loop(friends, \"friend\") {").tokens;
      expect(tokens[0]).toEqual({
        value: '##',
        scopes: ['text.html.leaf', 'meta.tag.leaf', 'operator.control.leaf']
      });
      expect(tokens[1]).toEqual({
        value: 'loop',
        scopes: ['text.html.leaf', 'meta.tag.leaf', 'entity.name.tag.leaf']
      });
      expect(tokens[2]).toEqual({
        value: '(',
        scopes: ['text.html.leaf', 'meta.tag.leaf', 'begin.operator.control.leaf']
      });
      expect(tokens[3]).toEqual({
        value: 'friends, "friend"',
        scopes: ['text.html.leaf', 'meta.tag.leaf', 'entity.parameters.tag.leaf']
      });
      return expect(tokens[4]).toEqual({
        value: ')',
        scopes: ['text.html.leaf', 'meta.tag.leaf', 'end.operator.control.leaf']
      });
    });
  });

}).call(this);
